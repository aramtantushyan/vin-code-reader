{"version":3,"sources":["components/scanner-container/ScannerContainer.module.css","components/dynamsoft/VinCodeReaderDynamsoft.module.css","components/scandit/VinCodeReaderScandit.js","components/scanner-container/ScannerContainer.js","dbr.js","components/dynamsoft/VinCodeReaderDynamsoft.js","App.js","index.js"],"names":["module","exports","VinCodeReaderScandit","props","licenseKey","engineLocation","paused","isScannerVisible","accessCamera","enableCameraSwitcher","enablePinchToZoom","enableTapToFocus","enableTorchToggle","guiStyle","BarcodePicker","GuiStyle","LASER","playSoundOnScan","vibrateOnScan","visible","cameraType","Camera","Type","BACK","scanSettings","ScanSettings","enabledSymbologies","Barcode","Symbology","CODE39","QR","EAN8","EAN13","codeDuplicateFilter","onReady","res","console","log","onScan","onScanValueChange","barcodes","data","onScanError","ScannerContainer","className","styles","scanner","id","onClick","children","htmlFor","type","value","scanValue","readOnly","DBR","engineResourcePath","productKeys","VinCodeReaderDynamsoft","videoContainer","useRef","scannerRef","pReader","a","BarcodeScanner","createInstance","current","setUIElement","getScanSettings","intervalTime","duplicateForgetTime","updateScanSettings","getRuntimeSettings","runtimeSettings","barcodeFormatIds","EnumBarcodeFormat","BF_CODE_39_EXTENDED","BF_CODE_39","updateRuntimeSettings","onFrameRead","results","length","barcodeText","result","barcodeFormatString","show","useEffect","scan","hide","ref","player","playsInline","App","useState","selectValue","setSelectValue","setIsScannerVisible","setScanValue","handleScanValueChange","useCallback","onChange","event","target","defaultValue","disabled","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fe6a4f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scanner\":\"ScannerContainer_scanner__3u6vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"VinCodeReaderDynamsoft_player__2fflF\"};","import ScanditBarcodeScanner from 'scandit-sdk-react';\r\nimport {\r\n  Barcode,\r\n  BarcodePicker,\r\n  Camera,\r\n  ScanSettings,\r\n} from \"scandit-sdk\";\r\n\r\nconst licenseKey = \"AWvA5gEMICbOHM7G6AAjOZo2+u5sIIwq5QlSkZZdqYb/YHKJdg7z1/0c8xSzQsLwOzlZo6ZKLwkXTz7jvFLOg0wPcyJvVVgjCGXxS9BlWlcNCv3PBBgURSA4YEf5Evn1RhIRzu/FGAh1PZSLVbU8n2s08QDzcRPvDI5brLAFfMnAFiGuGhIoB2Ur04duIpIzAMnDmfg7tDQQwISbpTIDx4jWRU9QdJRncSyUtWU2za7ZR9eAsdZ9Ft2RI4lxNzdmz2IHJ0TNpRKMxlbZEnomQNgwDJik1OC0NTmkxDzifA3j2OjgpaQxXOpeWX6+XzztEzpLfTRKDYbyAroVG9mI9/rjX63T07nRno5joI8d8DVoz2O06DaAyn+3y0/O8LGQqtGtKfgjvRxCY1f9d7z4KkqMSM5hpS7tli1e6bIgy91LKOxW1JFbqIKnTo4zHUrF0NL6PRPuQs9c1d9eaO1E1+BT4qcIMIa+TpF396eoQKlWH7RjlpJ3klqSHQAwAhun8aZWqAPia6seR1lhOjTtIEliqlBoTWDv00ZZLPTWPljt7ztPK7dDz0EccLeZLohImF3gjaDyZnSyW8sR9MXa2LUVFvhIqzpNWo2Hw/ufJS2zZvt8tEsq+79//Porafp5/XAxL9qibTlivbmMXEZ0KBZYwiTDO46Yi9nuGhPVE+d1v0I1yFm/QLlahrUO35quKaJ6RQtBZ0UlklhBPErMewt9h+Y+yf/6hqpbcWuQSW5lwZi6e91ZwGq33Ufh8DVeZ7Xgr9iwzx3Wo33DB5myVABZMMdjitU0ap9hSpXkWQ==\"\r\n\r\n// const licenseKey = \"AZqw3wwMLcJmFnaC+T2yCtUjhV8fE69KelLdDrpCdUzwTr10/Teo1HMozYBeRJfhulxAoDtWJ8ZfRjw6uwMyi3xunPkZIp4jz2qQts97+pfKZjAuxTkc4Glu3MtkeL4e1UfiqCBl8ecWa1ultk4fStQQAM3+Zrv7YkUa4HVDpgXZZ7rxYHzzOV9CTT/na+W5pX3y85VUKhbLW7qrxXIZrX168HXVd+HZ92jw+klMO+u6ToYwwUmFarhMuEilasBMJmWYNj1jiIsod2RZiERagg5iadxGLym6933YBTRYs0HGePwXM2d+M/J6zLB6choMh1mliaBxAu2BWg2NJEdp84ITpHcVR87DCGvQKqlgbrE1cGVVaFOGdBdntmqRVvo8pX1fk3R4uOtaCWcBpmZC3+NxFK7KSuMHklaE/mNIcDtlRADP7XZHrDNUd6JbVdbQ+GYOJM1f1sNNPWT1q0xd6NdLe/p4aVXnyGUMB8NMuVbXfmrx9WyxyIVjReYgX/WvNyY3k/UkJTBvKP5ROQ3pZrzZ0oeaNhVDrnI1P0dDOvBDCdZznyJo9iOhyabj56Vkr54z4KwcJqteXAyeJVbN0JwLmMoYrvOUK5c7RlqD8NLKoA0LEKHsauOwAH6DlopXx+372XgiNnoLn+u9HYkRN249u3tcXkuufmCoqj7BjOcR1d980jT5NLeqcUd1P3q2N7ci/r448DcH5Bg2ZjLiOVZaFQvk4gI3rKglFUynYe4UJibl0/0WbCZFQUGBbVq1dC970uWeODCs0IqCI7OvR3TT94P/v/o8apZM15Q8CALEPQzKI88FxQ9vdLjhj/KrrIy9FO61xVd4P7c3+MPSZYUq6EJdyEqzMqwAMADWYF+fmtydolasCskxE9/6zx7ZqOoLaReTo77j9NSGX2DSqniagCeKYaZ8jMOM/IfnqZe3SwKPk3+ihLb91yHnbNZ68I6dYr/o7caU0uDvyiS0PpXmynrhkxWftEyP7s+sFI0cmR/yxEthm6yFiOm5OG5vFXzcBgktPQTRazgLyTydf/1uiwRgEDRKBsspJrmH06G5bFheiNQb53HmxlmqaMnuWpcn94qyUvl+rEFa5fX2EkuK+Z4RtqN84qdhTxOLAvCindfiQE+ZzKG1k//BxnxjDwAaq6CyagAIeFVXQVkywvmEFJxMkU4zXzYnIZhV74i/pXxe+HkXnJDyVFTqqD1S\";\r\n\r\nexport const VinCodeReaderScandit = (props) => {\r\n\r\n\r\n  return (\r\n    <ScanditBarcodeScanner\r\n      licenseKey={licenseKey}\r\n      engineLocation=\"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build\"\r\n      paused={!props.isScannerVisible}\r\n      accessCamera={props.isScannerVisible}\r\n      enableCameraSwitcher={true}\r\n      enablePinchToZoom={true}\r\n      enableTapToFocus={true}\r\n      enableTorchToggle={true}\r\n      guiStyle={BarcodePicker.GuiStyle.LASER}\r\n      playSoundOnScan={true}\r\n      vibrateOnScan={true}\r\n      visible={true}\r\n      cameraType={Camera.Type.BACK}\r\n      scanSettings={new ScanSettings({enabledSymbologies: [Barcode.Symbology.CODE39, Barcode.Symbology.QR, Barcode.Symbology.EAN8, Barcode.Symbology.EAN13], codeDuplicateFilter: 1000})}\r\n      onReady={(res) => console.log(1212, res)}\r\n      onScan={(res) => {console.log(res); props.onScanValueChange(res.barcodes[0].data)}}\r\n      onScanError={(res) => console.log('error', res)} \r\n      // cameraSettings={CameraSettings.ResolutionPreference.HD}\r\n    />\r\n  );\r\n};","import styles from \"./ScannerContainer.module.css\"\r\n\r\nfunction ScannerContainer(props) {\r\n\r\n  return (\r\n    <div className={styles.scanner}>\r\n    <button className=\"mb-3\" id=\"readBarcode\" onClick={props.onScan}>{props.isScannerVisible ? 'Close VIN scanner' : 'Open VIN scanner'}</button>\r\n    {props.children}\r\n    <div className=\"d-flex flex-column mt-3\" >\r\n      <label htmlFor=\"VIN\">Scanned VIN code</label>\r\n      <input type=\"text\" id=\"VIN\" value={props.scanValue} readOnly />\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\nexport default ScannerContainer; ","import DBR from \"dynamsoft-javascript-barcode\";\r\nDBR.engineResourcePath = \"https://cdn.jsdelivr.net/npm/dynamsoft-javascript-barcode@8.6.1/dist/\";\r\nDBR.productKeys = \"PRODUCT-KEYS\";\r\n// Please visit https://www.dynamsoft.com/customer/license/trialLicense?product=dbr&package=js&utm_source=npm to get a trial license","import { useEffect, useRef } from 'react';\r\nimport '../../dbr'\r\nimport { BarcodeScanner, EnumBarcodeFormat } from 'dynamsoft-javascript-barcode';\r\n\r\nimport styles from './VinCodeReaderDynamsoft.module.css'\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nfunction VinCodeReaderDynamsoft({isScannerVisible, onScanValueChange}) {\r\n  const videoContainer = useRef();\r\n  const scannerRef = useRef();\r\n  let pReader = null;\r\n\r\n  async function scan() {\r\n    try {\r\n      scannerRef.current = await (pReader = pReader || BarcodeScanner.createInstance());\r\n      console.log(scannerRef.current)\r\n      await scannerRef.current.setUIElement(videoContainer.current);\r\n      let scanSettings = await scannerRef.current.getScanSettings();\r\n      scanSettings.intervalTime = 500;\r\n      scanSettings.duplicateForgetTime = 1000;\r\n      await scannerRef.current.updateScanSettings(scanSettings);\r\n      let runtimeSettings = await scannerRef.current.getRuntimeSettings();\r\n      runtimeSettings.barcodeFormatIds = EnumBarcodeFormat.BF_CODE_39_EXTENDED | EnumBarcodeFormat.BF_CODE_39;\r\n      await scannerRef.current.updateRuntimeSettings(runtimeSettings);\r\n      /* \r\n        * onFrameRead is triggered once each frame is read. \r\n        * There can be one or multiple barcodes on each frame.\r\n        */\r\n      scannerRef.current.onFrameRead = results => {\r\n        console.log(results);\r\n        if (results.length > 0) {\r\n          onScanValueChange(results[0].barcodeText)\r\n        }\r\n\r\n        for (let result of results) {\r\n            console.log(result.barcodeFormatString + \": \" + result.barcodeText);\r\n        }\r\n      };\r\n      /* \r\n        * onUnduplicatdRead is triggered once a new barcode is found. \r\n        * The amount of time that the library 'remembers' the found barcode is defined by duplicateForgetTime \r\n        * in the ScanSettings interface of the BarcodeScanner class. By default that is set to 3000 ms (or 3 secs) \r\n        */\r\n      // scanner.onUnduplicatedRead = (txt, result) => {\r\n      //     alert('onUnduplicatedRead', txt);\r\n      //     console.log(\"Unique Code Found: \" + result);\r\n      // }\r\n      await scannerRef.current.show();\r\n    } catch (ex) {\r\n        console.log(ex);\r\n        throw ex;\r\n    } \r\n  }\r\n\r\n  useEffect(() => {\r\n    isScannerVisible ?  scan(): scannerRef.current?.hide()\r\n  }, [isScannerVisible])\r\n\r\n\r\n  return (\r\n    <div ref={videoContainer}>\r\n      <video className={`dbrScanner-video ${styles.player}`} playsInline={true}></video>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VinCodeReaderDynamsoft;","import { useState, useCallback } from 'react';\nimport './App.css';\n\nimport { VinCodeReaderScandit } from './components/scandit/VinCodeReaderScandit'\nimport ScannerContainer from './components/scanner-container/ScannerContainer';\nimport VinCodeReaderDynamsoft from './components/dynamsoft/VinCodeReaderDynamsoft'\n\nfunction App() {\n  const [selectValue, setSelectValue] = useState(null);\n  const [isScannerVisible, setIsScannerVisible] = useState(false);\n  const [scanValue, setScanValue] = useState('');\n\n  const handleSelectChange = (event) => {\n    setSelectValue(event.target.value);\n  };\n\n  const scanVinCodeHandler = () => {\n    setIsScannerVisible((prevState) => !prevState);\n  }\n\n  const handleScanValueChange = useCallback((res) => {\n    setScanValue(res);\n  }, []);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row justify-content-center mb-3 mt-3\">\n          <div className=\"col-8 d-flex flex-column justify-content-center\">\n            <label htmlFor=\"scannerSelect\">Select Scanner</label>\n            <select onChange={handleSelectChange} defaultValue={0} id=\"scannerSelect\">\n              <option value={0} disabled>Select...</option>\n              <option value=\"scandit\">Scandit</option>\n              <option value=\"dynamsoft\">Dynamsoft</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row justify-content-center mb-3 mt-3\">\n          <div className=\"col-8 d-flex justify-content-center\">\n            {selectValue && \n            <ScannerContainer \n              onScan={scanVinCodeHandler} \n              scanValue={scanValue} \n              isScannerVisible={isScannerVisible}>\n              {selectValue === 'scandit' ?\n              <VinCodeReaderScandit\n                isScannerVisible={isScannerVisible}\n                onScanValueChange={handleScanValueChange}/> : <VinCodeReaderDynamsoft isScannerVisible={isScannerVisible} onScanValueChange={handleScanValueChange}/>\n              }\n            </ScannerContainer>}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}